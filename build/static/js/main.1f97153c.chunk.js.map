{"version":3,"sources":["Components/Styled/GlobalStyle.js","Components/Functions/context.js","image/logo.svg","image/user.svg","Components/Styled/Buttons.js","Components/NavBar/NavBar.js","Components/Functions/secondaryFunc.js","Components/Menu/ListItem.js","Components/Styled/Components.js","image/banner.png","Components/Menu/Menu.js","Components/Hooks/useFetch.js","Components/Modal/CountItem.js","Components/Hooks/useToppings.js","Components/Modal/Toppings.js","Components/Modal/Choices.js","Components/Modal/ModalItem.js","Components/Hooks/useCount.js","Components/Hooks/useChoices.js","image/trash.svg","Components/Order/OrderListItem.js","Components/Order/Order.js","Components/Order/OrderConfirm.js","Components/Order/Thanks.js","App.js","Components/Hooks/useAuth.js","Components/Hooks/useOpenItem.js","Components/Hooks/useOrders.js","Components/Hooks/useOrderConfirm.js","Components/Hooks/useThanks.js","Components/Hooks/useTitle.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Context","React","createContext","ContextItem","Button","styled","button","ButtonCheckout","ButtonLog","NavBarStyled","header","Logo","div","H1","h1","ImgLogo","img","UserLog","Welcome","p","NavBar","useContext","auth","authentification","logIn","logOut","src","logoImg","alt","onClick","displayName","userImg","formatCurrency","price","toLocaleString","style","currency","totalPriceItems","order","countTopping","topping","filter","item","checked","length","priceTopping","count","List","ul","Item","li","ListItem","itemList","setOpenItem","openItem","map","name","id","Banner","ModalSmall","OrderTitle","h2","Overlay","SelectWrap","SelectLabel","label","Total","TotalPrice","span","MenuStyled","main","SectionMenu","section","MenuHeader","MenuBanner","bannerImg","Menu","res","useState","responce","setResponce","error","setError","useEffect","a","fetch","json","useFetch","dbMenu","burger","other","CountWrapper","CountInput","input","ButtonCount","CountItem","counter","onChange","validCount","disabled","type","min","max","value","ToppingCheckbox","Toppings","toppings","checkToppings","i","ChoiceRadio","Choices","choices","choice","changeChoices","Modal","ModalBanner","Content","HeaderContent","TotalPriceItem","ModalItem","orders","setOrders","startCount","setCount","e","target","replace","useCount","readyTopping","getTopping","setToppings","index","newItem","useToppings","setChoice","useChoices","isEdit","Provider","newOrders","TrashButton","trashImg","OrderItemStyled","ItemName","ItemPrice","OrderListItem","deleteItem","join","refDelBtn","useRef","current","ref","OrderStyled","OrderContent","OrderList","EmptyList","Order","setOpenOrderConfirm","orderConfirm","total","reduce","result","totalCounter","Text","h3","rulesData","itemName","arr","obj","sendOrder","dataBase","setOpenThanks","newOrder","rules","keys","Object","newObj","key","val","fn","projection","push","set","nameClient","email","OrderConfirm","thanks","firebaseDatabase","ThanksModal","ButtonThanks","Thanks","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","authFirebase","setAuthentification","provider","GoogleAuthProvider","onAuthStateChanged","user","signInWithPopup","signOut","catch","err","console","useAuth","useOpenItem","useOrders","openOrderConfirm","useOrderConfirm","openThanks","useThanks","document","title","useTitle","database","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1f97153c.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  html {\r\n    box-sizing: border-box;\r\n   }\r\n   *,\r\n   *::before,\r\n   *::after {\r\n     box-sizing: inherit;\r\n   }\r\n\r\n   body {\r\n     margin: 0;\r\n     background-color: #f0f0f0;\r\n     font-family: Roboto, sans-serif;\r\n     font-size: 20px;\r\n     color: black\r\n   }\r\n   img {\r\n     max-width: 100%;\r\n     height: auto;\r\n   }\r\n   a {\r\n     text-decoration: none;\r\n     color: inherit;\r\n   }\r\n   ul {\r\n     list-style: none;\r\n     padding: 0;\r\n     margin: 0;\r\n   }\r\n   h1, h2, h3 {\r\n    font-family: Pacifico;\r\n    padding: 0;\r\n    margin: 0;\r\n   }\r\n   p {\r\n    padding: 0;\r\n    margin: 0;\r\n   }\r\n   button {\r\n    cursor: pointer;\r\n   }\r\n   input, button {\r\n     font: inherit;\r\n   }\r\n   input [type='number'] {\r\n     -moz-appearance: textfield;\r\n   }\r\n   input::-webkit-outer-spin-button,\r\n   input::-webkit-inner-spin-button {\r\n     -webkit-appearance: none;\r\n   }\r\n\r\n`;","import React from 'react';\r\n\r\nexport const Context = React.createContext();\r\n\r\nexport const ContextItem = React.createContext();","export default __webpack_public_path__ + \"static/media/logo.e1eaca91.svg\";","export default __webpack_public_path__ + \"static/media/user.3dc24465.svg\";","import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n    position: relative;\r\n    font-size: inherit;\r\n    text-decoration: none;\r\n    color: #002878;\r\n    border-radius: 30px;\r\n    background-image: linear-gradient(45deg, #6ab1d7 0%, #33d9de 50%, #002878 100%);\r\n    background-position: 90% 0;\r\n    background-size: 200% 200%;\r\n    box-shadow: 0 16px 32px 0 rgba(0, 40, 120, .35);\r\n    transition: .5s;\r\n    &:hover {\r\n        box-shadow: 0 0 0 0 rgba(0, 40, 120, 0);\r\n        background-position: 0 0;\r\n    }\r\n`;\r\nexport const ButtonCheckout = styled(Button)`\r\n    width: fit-content;\r\n    margin: 0 auto;\r\n    padding: 8px 30px;\r\n    &:disabled {\r\n        background-image: none;\r\n        box-shadow: none;\r\n        background-color: #bbb;\r\n    }\r\n`;\r\n\r\nexport const ButtonLog = styled(Button)`\r\n    width: 60px;\r\n    height: 60px;\r\n    font-size: 30px;\r\n    font-weight: 800;\r\n`;","import React, { useContext } from 'react';\r\nimport { Context } from '../Functions/context';\r\nimport styled from 'styled-components';\r\nimport logoImg from '../../image/logo.svg';\r\nimport userImg from '../../image/user.svg';\r\nimport { ButtonLog } from '../Styled/Buttons';\r\n\r\nconst NavBarStyled = styled.header`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 999;\r\n    height: 80px;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 15px;\r\n    background-color: #33d9de;\r\n    box-shadow: 0px 4px 5px rgba(0, 40, 120, 0.25);\r\n    color: #002878;\r\n`;\r\nconst Logo = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\nconst H1 = styled.h1`\r\n    font-size: 30px;\r\n    margin-left: 15px;\r\n`;\r\nconst ImgLogo = styled.img`\r\n    width: 70px;\r\n`;\r\nconst UserLog = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 20px;\r\n`;\r\nconst Welcome = styled.p`\r\n    margin-right: 10px;\r\n    width: 120px;\r\n    text-align: center;\r\n`;\r\n\r\nexport const NavBar = () => {\r\n\r\n    const { auth: { authentification, logIn, logOut } } = useContext(Context);\r\n    // вместо const { authentification, logIn, logOut } = auth;\r\n    return (\r\n        <NavBarStyled>\r\n            <Logo>\r\n                <ImgLogo src={logoImg} alt=\"logo\"/>\r\n                <H1>MrMagamba®</H1>\r\n            </Logo>\r\n            {authentification ?\r\n            <UserLog onClick={logOut}>\r\n                <Welcome>{authentification.displayName}</Welcome>\r\n                <ButtonLog>X</ButtonLog>\r\n            </UserLog> :\r\n            <UserLog onClick={logIn}>\r\n                <Welcome>Войти</Welcome>\r\n                <ButtonLog>\r\n                    <img src={userImg} alt=\"Поесть\"></img>\r\n                </ButtonLog>\r\n            </UserLog>\r\n            }\r\n        </NavBarStyled>\r\n    )\r\n}","\r\nexport const formatCurrency = price => price.toLocaleString('ru-RU', {style: 'currency', currency: 'RUB'});\r\n\r\nexport const totalPriceItems = order => {\r\n\r\n    const countTopping = order.topping && order.topping.filter(item => item.checked).length;\r\n\r\n    //const countChoice = order.choise && order.choise.filter(item => item.checked).length;\r\n\r\n    const priceTopping = (order.price * 0.1) * countTopping;\r\n\r\n    return (order.price + priceTopping) * (order.count < 1 ? 1 : order.count > 100 ? 100 : order.count);\r\n}\r\n\r\nexport const projection = rules => {\r\n    const keys = Object.keys(rules);\r\n    return obj => keys.reduce((newObj, key) => {\r\n        newObj[key] = rules[key].reduce((val, fn, i) => (i ? fn(val) : obj[fn]), null)\r\n        return newObj;\r\n    }, {})\r\n};\r\n\r\n","import React, { useContext } from 'react';\r\nimport { Context } from '../Functions/context';\r\nimport styled from 'styled-components';\r\nimport { formatCurrency } from '../Functions/secondaryFunc';\r\n\r\nconst List = styled.ul`\r\n    display: flex;\r\n    justify-content: space-around; {/*для переноса элем на нов строку*/}\r\n    flex-wrap: wrap;\r\n\r\n`;\r\nconst Item = styled.li`\r\n    position: relative;\r\n    width: 400px; {/*из верстки в figma*/}\r\n    height: 155px;\r\n    background-image: ${({ img }) => `url(${img})`}; {/*{ img } - это деструкт props */}\r\n    background-position: center;\r\n    background-size: cover;\r\n    margin-top: 30px;\r\n    margin-right: 20px;\r\n    padding: 15px;\r\n    font-size: 24px;\r\n    color: #33d9de;\r\n    z-index: 1;\r\n    &:hover {\r\n        cursor: pointer;\r\n        box-shadow: inset 0 0 50px 30px black;\r\n        &:after {\r\n            opacity: 0;\r\n        }\r\n    }\r\n    &:after {  {/*псевдо-элем с затемнением на весь блок с img*/}\r\n        content: '';\r\n        position: absolute;\r\n        top: 0;\r\n        bottom: 0;\r\n        right: 0;\r\n        left: 0;\r\n        background-color: #000;\r\n        opacity: 40%;\r\n        z-index: -1;\r\n    }\r\n`;\r\n\r\nexport const ListItem = ({ itemList }) => {\r\n\r\n    const { openItem: { setOpenItem } } = useContext(Context);\r\n\r\n    return (\r\n        <List>\r\n            {itemList.map(item => (\r\n                <Item    /*key for rerender autentification objects*/\r\n                    key={item.id}\r\n                    img={item.img}\r\n                    onClick={() => setOpenItem(item)}>\r\n                    <p>{item.name}</p>\r\n                    <p>{formatCurrency(item.price)}</p>\r\n                </Item>\r\n            ))}\r\n        </List>\r\n    )\r\n};","import styled from 'styled-components';\r\n\r\nexport const Banner = styled.div`\r\n    width: 100%;\r\n    background-position: center;\r\n    background-size: cover;\r\n`;\r\n\r\nexport const ModalSmall = styled.div`\r\n    background-color: #33d9de;\r\n    color: #002878;\r\n    width: 400px;\r\n    padding: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const OrderTitle = styled.h2`\r\n    text-align: center;\r\n    font-weight: 400;\r\n    line-height: 68px;\r\n    margin-bottom: 30px;\r\n`;\r\n\r\nexport const Overlay = styled.div`\r\n    position: fixed;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    top: 40px;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, .5);\r\n    z-index: 20;\r\n`;\r\n\r\nexport const SelectWrap = styled.div`\r\n    max-width: 500px;\r\n    margin: 0 auto;\r\n    column-count: 2;\r\n    column-gap: 5px;\r\n`;\r\n\r\nexport const SelectLabel = styled.label`\r\n    cursor: pointer;\r\n    display: block;\r\n`;\r\n\r\nexport const Total = styled.div`\r\n    display: flex;\r\n    margin: 0 35px 30px;\r\n    & span:first-child {\r\n        flex-grow: 1;\r\n    }\r\n`;\r\n\r\nexport const TotalPrice = styled.span`\r\n    text-align: right;\r\n    width: 120px;\r\n    margin-left: 5px;\r\n`;","export default __webpack_public_path__ + \"static/media/banner.7c11c243.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ListItem } from './ListItem';\r\nimport { Banner } from '../Styled/Components';\r\nimport { useFetch } from '../Hooks/useFetch';\r\nimport bannerImg from '../../image/banner.png';\r\n\r\nconst MenuStyled = styled.main`\r\n    background-color: #ccc;\r\n    margin-top: 80px;\r\n    margin-left: 380px;\r\n`;\r\nconst SectionMenu = styled.section`\r\n    padding: 30px;\r\n`;\r\nconst MenuHeader = styled.h2`\r\n    font-size: 32px;\r\n    color: #002878;\r\n`;\r\nconst MenuBanner = styled(Banner)`\r\n    background-image: url(${bannerImg});\r\n    height: 210px;\r\n`;\r\n\r\nexport const Menu = () => {\r\n\r\n    const res = useFetch();\r\n    const dbMenu = res.responce;\r\n\r\n    return (\r\n        <MenuStyled>\r\n            <MenuBanner/>\r\n            {res.responce ?\r\n            <>\r\n            <SectionMenu>\r\n                <MenuHeader>Бургеры</MenuHeader>\r\n                <ListItem itemList={dbMenu.burger}/>\r\n            </SectionMenu>\r\n            <SectionMenu>\r\n                <MenuHeader>Закуски / Напитки</MenuHeader>\r\n                <ListItem itemList={dbMenu.other}/>\r\n            </SectionMenu>\r\n            </> : res.error ?\r\n            <div>Sorry, we will fix it soon...</div> :\r\n            <div>Loading...</div>\r\n            }\r\n        </MenuStyled>\r\n    )\r\n};","import { useEffect, useState } from 'react';\r\n\r\nexport const useFetch = () => {\r\n\r\n    const [responce, setResponce] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        (async() => {\r\n            try {\r\n                const json = await fetch('DB.json');\r\n                const res = await json.json();\r\n                setResponce(res);\r\n            } catch(err) {\r\n                setError(err);\r\n            }\r\n        })();\r\n    }, []); // пустой массив чтобы запустилась 1 раз\r\n\r\n    return { responce, error };\r\n}","import React, { useContext } from 'react';\r\nimport { ContextItem } from '../Functions/context';\r\nimport styled from 'styled-components';\r\n\r\nconst CountWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\nconst CountInput = styled.input`\r\n    width: 40px;\r\n    font-size: 20px;\r\n    background-color: #33d9de;\r\n    border: none;\r\n    text-align: center;\r\n`;\r\nconst ButtonCount = styled.button`\r\n    background-color: #002878;\r\n    border: none;\r\n    border-radius: 3px;\r\n    width: 30px;\r\n    height: 30px;\r\n    color: #33d9de;\r\n\r\n`;\r\n\r\nexport function CountItem() {\r\n\r\n    const { counter: { count, onChange, validCount } } = useContext(ContextItem)\r\n    return (\r\n        <CountWrapper>\r\n            <span>Количество</span>\r\n            <div>\r\n                <ButtonCount disabled={count <= 1} onClick={() => validCount(count - 1)}>-</ButtonCount>\r\n                <CountInput type='number' min='1' max='100' onChange={onChange}\r\n                            value={count}/>\r\n                <ButtonCount disabled={count >= 100} onClick={() => validCount(+count + 1)}>+</ButtonCount>\r\n            </div>\r\n        </CountWrapper>\r\n    )\r\n}","import { useState } from 'react';\r\n\r\n// преобразовываем [] с топпингами в объект с key\r\nconst getTopping = toppings => toppings.map(item => ({\r\n        name: item,\r\n        checked: false,\r\n})) // получим [{name: 'Лук', checked: false}, {name: 'Соус', checked: false}]\r\n\r\n\r\nexport function useToppings(openItem) {\r\n\r\n    const readyTopping = openItem.topping ? openItem.topping : //были  -их и вернем\r\n                        openItem.toppings ? getTopping(openItem.toppings) :\r\n                        []; //наличие топпингов?\r\n    const [toppings, setToppings] = useState(readyTopping);\r\n\r\n    const checkToppings = index => {\r\n        setToppings(toppings.map((item, i) => {\r\n            const newItem = {...item}  // при работе с hooks можно без new\r\n            if (i === index) {\r\n                newItem.checked = !newItem.checked\r\n            }\r\n            return newItem;\r\n        }))\r\n    }\r\n\r\n    return {toppings, checkToppings};\r\n}","import React, { useContext } from 'react';\r\nimport { ContextItem } from '../Functions/context';\r\nimport styled from 'styled-components';\r\nimport { SelectWrap, SelectLabel } from '../Styled/Components';\r\n\r\nconst ToppingCheckbox = styled.input`\r\n    cursor: pointer;\r\n    margin-right: 5px;\r\n`;\r\n\r\nexport function Toppings() {\r\n\r\n    const { toppings: { toppings, checkToppings } } = useContext(ContextItem)\r\n    return (\r\n        <>\r\n            <h3>Добавки:</h3>\r\n            <SelectWrap>\r\n                {toppings.map((item, i) => (\r\n                    <SelectLabel key={i}>\r\n                        <ToppingCheckbox\r\n                            type=\"checkbox\"\r\n                            checked={item.checked}\r\n                            onChange={() => checkToppings(i)} //передали index топпинга\r\n                            />\r\n                        {item.name}\r\n                    </SelectLabel>\r\n                ))}\r\n            </SelectWrap>\r\n        </>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { Context, ContextItem } from '../Functions/context';\r\nimport styled from 'styled-components';\r\nimport { SelectWrap, SelectLabel } from '../Styled/Components';\r\n\r\nconst ChoiceRadio = styled.input`\r\n    cursor: pointer;\r\n    margin-right: 5px;\r\n`;\r\n\r\nexport function Choices() {\r\n\r\n    const { openItem: { openItem } } = useContext(Context);\r\n    const { choices: { choice, changeChoices } } = useContext(ContextItem);\r\n\r\n    return (\r\n        <>\r\n            <h3>Выберите:</h3>\r\n            <SelectWrap>\r\n                {openItem.choices.map(item => (\r\n                    <SelectLabel key={item}>\r\n                        <ChoiceRadio\r\n                            type=\"radio\"\r\n                            name=\"choices\"\r\n                            checked={choice === item}\r\n                            value={item}\r\n                            onChange={changeChoices}\r\n                            />\r\n                        {item}\r\n                    </SelectLabel>\r\n                ))}\r\n            </SelectWrap>\r\n        </>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { Context, ContextItem } from '../Functions/context';\r\nimport styled from 'styled-components';\r\nimport { ButtonCheckout } from '../Styled/Buttons';\r\nimport { Banner, Overlay } from '../Styled/Components';\r\nimport { CountItem } from './CountItem';\r\nimport { useCount } from '../Hooks/useCount';\r\nimport { useToppings } from '../Hooks/useToppings';\r\nimport { useChoices } from '../Hooks/useChoices';\r\nimport { formatCurrency, totalPriceItems } from '../Functions/secondaryFunc';\r\nimport { Toppings } from '../Modal/Toppings';\r\nimport { Choices } from '../Modal/Choices';\r\n\r\nconst Modal = styled.div`\r\n    background-color: #33d9de;\r\n    width: 600px;\r\n    height: 600px;\r\n    color: #002878;\r\n    /*transform: translateY(-5%);*/\r\n    /*box-shadow: 0px 0px 5px 3px rgba(0, 40, 120, 0.3);*/\r\n`;\r\nconst ModalBanner = styled(Banner)`\r\n    height: 200px;\r\n    background-image: url(${({ img }) => img});\r\n`;\r\nconst Content = styled.section `\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    height: calc(100% - 200px);\r\n    padding: 30px;\r\n`;\r\nconst HeaderContent = styled.div `\r\n    display: flex;\r\n    justify-content: space-between;\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    font-family: 'Pacifico', cursive;\r\n`;\r\nconst TotalPriceItem = styled.div `\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nexport const ModalItem = () => {\r\n\r\n    const { openItem: { openItem, setOpenItem },\r\n            orders: { orders, setOrders } } = useContext(Context);\r\n\r\n    //передаем исх количество при откр мод\r\n    const counter = useCount(openItem.count);\r\n    const toppings = useToppings(openItem);\r\n    const choices = useChoices(openItem);\r\n    //true если из заказов, из меню index - undef -> false\r\n    const isEdit = openItem.index > -1;\r\n\r\n    const closeModal = e => {\r\n        if(e.target.id === 'overlay') {\r\n            setOpenItem(null);\r\n        }\r\n    }\r\n    const order = {\r\n        ...openItem, // передали все свойства\r\n        count: counter.count,\r\n        topping: toppings.toppings,\r\n        choice: choices.choice,\r\n    };\r\n\r\n    const editOrder = () => {\r\n        const newOrders = [...orders];\r\n        newOrders[openItem.index] = order;\r\n        setOrders(newOrders);\r\n        setOpenItem(null);\r\n    }\r\n\r\n    const addToOrder = () => {\r\n        setOrders([...orders, order]); //новый заказ в конец массива старых\r\n        setOpenItem(null); //закрыли модалку\r\n    }\r\n\r\n    return (\r\n        <ContextItem.Provider value={{\r\n            choices,\r\n            toppings,\r\n            counter,\r\n        }}>\r\n        <Overlay id=\"overlay\" onClick={closeModal}>\r\n            <Modal id=\"modal\">\r\n                <ModalBanner img={openItem.img}/>\r\n                <Content>\r\n                    <HeaderContent>\r\n                        <div>{openItem.name}</div>\r\n                        <div>{formatCurrency(openItem.price)}</div>\r\n                    </HeaderContent>\r\n                    <CountItem/> {/*выводим только если есть*/}\r\n                    {openItem.toppings && <Toppings/>}\r\n                    {openItem.choices && <Choices/>}\r\n                    <TotalPriceItem>\r\n                        <span>Цена</span>\r\n                        <span>{formatCurrency(totalPriceItems(order))}</span>\r\n                    </TotalPriceItem>\r\n                    <ButtonCheckout\r\n                        onClick={isEdit ? editOrder : addToOrder}\r\n                        disabled={order.choices && !order.choice}\r\n                        >{isEdit ? 'Изменить' : 'Добавить'}</ButtonCheckout>\r\n                </Content>\r\n            </Modal>\r\n        </Overlay>\r\n        </ContextItem.Provider>\r\n    )\r\n};\r\n","import { useState } from 'react';\r\n\r\nexport function useCount(startCount) {\r\n    const [count, setCount] = useState(startCount || 1);\r\n\r\n    const validCount = (value) => {\r\n        value = value < 1 ? 1 : value > 100 ? 100 : value;\r\n        setCount(value);\r\n    }\r\n    const onChange = e => {\r\n        const value = e.target.value.replace(/^0+/, '');\r\n        validCount(value)\r\n    }\r\n    return {count, setCount, onChange, validCount};\r\n}","import { useState } from 'react';\r\n\r\nexport function useChoices(openItem) {\r\n\r\n    const [choice, setChoice] = useState();\r\n\r\n    function changeChoices(e) {\r\n       setChoice(e.target.value);\r\n    }\r\n\r\n    return {choice, changeChoices};\r\n}\r\n","export default __webpack_public_path__ + \"static/media/trash.eb1a306d.svg\";","import React, { useRef, useContext } from 'react';\r\nimport { Context } from '../Functions/context';\r\nimport styled from 'styled-components';\r\nimport trashImg from '../../image/trash.svg';\r\nimport { formatCurrency } from '../Functions/secondaryFunc';\r\nimport { totalPriceItems } from '../Functions/secondaryFunc';\r\n\r\nconst TrashButton = styled.button`\r\n    width: 24px;\r\n    height: 24px;\r\n    border-color: transparent;\r\n    background-color: transparent;\r\n    background-image: url(${trashImg});\r\n    background-position: center;\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n`;\r\nconst OrderItemStyled = styled.li`\r\n    display: flex;\r\n    margin: 15px 0;\r\n    flex-wrap: wrap;\r\n    cursor: pointer;\r\n\r\n`;\r\nconst ItemName = styled.span`\r\n    flex-grow: 1;\r\n`;\r\nconst ItemPrice = styled.span`\r\n    margin-left: 5px;\r\n    margin-right: 10px;\r\n    width: 120px;\r\n    text-align: right;\r\n`;\r\nconst Toppings = styled.div`\r\n    color: #9a9a9a;\r\n    font-size: 14px;\r\n    width: 100%;\r\n`;\r\nconst Choices = styled.div`\r\n    color: #9a9a9a;\r\n    font-size: 14px;\r\n    width: 100%;\r\n`;\r\n\r\nexport const OrderListItem = ( { order, index, deleteItem }) => {\r\n\r\n    const { openItem: { setOpenItem } } = useContext(Context);\r\n\r\n    const topping = order.topping.filter(item => item.checked)\r\n        .map(item => item.name).join(', ');\r\n\r\n    const refDelBtn = useRef(null); //стандарт хук не рендерит(сохр ссылку на эл-т)\r\n\r\n    return (\r\n        <OrderItemStyled onClick={(e) => e.target !== refDelBtn.current &&\r\n                        setOpenItem({...order, index})}> {/*откр модал кликом по заказу*/}\r\n            <ItemName>{order.name}</ItemName>\r\n            <span>{order.count}</span>\r\n            <ItemPrice>{formatCurrency(totalPriceItems(order))}</ItemPrice>\r\n            <TrashButton ref={refDelBtn} onClick={() => deleteItem(index)}/>\r\n            {topping && <Toppings>Добавки: {topping}</Toppings>}\r\n            {order.choice && <Choices>Ваш выбор: {order.choice}</Choices>}\r\n\r\n        </OrderItemStyled>\r\n    )\r\n};","import React, { useContext } from 'react';\r\nimport { Context } from '../Functions/context';\r\nimport styled from 'styled-components';\r\nimport { ButtonCheckout } from '../Styled/Buttons';\r\nimport { OrderTitle, Total, TotalPrice } from '../Styled/Components';\r\nimport { OrderListItem } from './OrderListItem';\r\nimport { formatCurrency, totalPriceItems } from '../Functions/secondaryFunc';\r\n\r\nconst OrderStyled = styled.section`\r\n    position: fixed;\r\n    display: flex;\r\n    flex-direction: column;\r\n    top: 80px;\r\n    left: 0;\r\n    background: #fff;\r\n    width: 380px;\r\n    height: calc(100% - 80px);\r\n    box-shadow: 4px 0px 5px rgba(0, 40, 120, 0.25);\r\n    padding: 20px;\r\n`;\r\nconst OrderContent = styled.div`\r\n    flex-grow: 1; {/*растянуть контент */}\r\n`;\r\nconst OrderList = styled.ul`\r\n\r\n`;\r\nconst EmptyList = styled.p`\r\n    text-align: center;\r\n`;\r\n\r\nexport const Order = () => {\r\n\r\n    const { auth: { authentification, logIn },\r\n        orders: { orders, setOrders },\r\n        orderConfirm: { setOpenOrderConfirm } } = useContext(Context);\r\n\r\n    const deleteItem = index => {\r\n        const newOrders = orders.filter((item, i) => index !== i);\r\n        setOrders(newOrders);\r\n    }\r\n\r\n    const total = orders.reduce((result, order)=> //к-во товара\r\n                totalPriceItems(order) + result, 0)\r\n\r\n    const totalCounter = orders.reduce((result, order)=> //ощее к-во товаров\r\n                        +order.count + result, 0)\r\n\r\n    return (\r\n        <OrderStyled>\r\n            <OrderTitle>ВАШ ЗАКАЗ</OrderTitle>\r\n            <OrderContent>\r\n                { orders.length ?  //проверка наличия заказов\r\n                <OrderList>       {/*перебираем и добав заказы*/}\r\n                    { orders.map((order, index) => <OrderListItem\r\n                            key={index}\r\n                            order={order}\r\n                            deleteItem={deleteItem}\r\n                            index={index}\r\n                            />) }\r\n                </OrderList> : //иначе если список пуст\r\n                <EmptyList>Список заказов пуст</EmptyList> }\r\n            </OrderContent>\r\n            {orders.length ?\r\n                <>\r\n                <Total>\r\n                    <span>Итого:</span>\r\n                    <span>{totalCounter} шт.</span>\r\n                    <TotalPrice>{formatCurrency(total)}</TotalPrice>\r\n                </Total>\r\n                <ButtonCheckout onClick={() => authentification ? setOpenOrderConfirm(true)\r\n                                                                : logIn()}>\r\n                Оформить</ButtonCheckout>\r\n                </> :\r\n                null\r\n            }\r\n        </OrderStyled>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { Context } from '../Functions/context';\r\nimport styled from 'styled-components';\r\nimport { Overlay, ModalSmall, OrderTitle, Total, TotalPrice } from '../Styled/Components';\r\nimport { ButtonCheckout } from '../Styled/Buttons';\r\nimport { formatCurrency, totalPriceItems, projection } from '../Functions/secondaryFunc';\r\n\r\nconst Text = styled.h3`\r\n    text-align: center;\r\n    margin-bottom: 30px;\r\n`;\r\n// правила обработки заказа\r\nconst rulesData = {\r\n    itemName: ['name'],\r\n    price: ['price'],\r\n    count: ['count'],\r\n    topping: ['topping', arr => arr.filter(obj => obj.checked).map(obj => obj.name),\r\n            arr => arr.length ? arr : 'no topping'],\r\n    choice: ['choice', item => item ? item : 'no choices'],\r\n};\r\n\r\nconst sendOrder = (dataBase, orders, authentification, setOpenThanks) => {\r\n    const newOrder = orders.map(projection(rulesData));\r\n\r\n    dataBase.ref('orders').push().set({\r\n        nameClient: authentification.displayName,\r\n        email: authentification.email,\r\n        order: newOrder\r\n    });\r\n    setOpenThanks(true);\r\n\r\n};\r\n\r\nexport const OrderConfirm = () => {\r\n\r\n    const { auth: { authentification },\r\n        orders: { orders, setOrders },\r\n        orderConfirm: { setOpenOrderConfirm },\r\n        thanks: { setOpenThanks },\r\n        firebaseDatabase\r\n    } = useContext(Context);\r\n    const dataBase = firebaseDatabase();\r\n\r\n\r\n    const total = orders.reduce((result, order)=> //к-во товара\r\n                totalPriceItems(order) + result, 0);\r\n\r\n    const closeModal = e => {\r\n        if(e.target.id === 'confirm-overlay') {\r\n            setOpenOrderConfirm(false);\r\n        }\r\n    }\r\n    return (\r\n        <Overlay id=\"confirm-overlay\" onClick={closeModal}>\r\n            <ModalSmall>\r\n                <OrderTitle>{authentification.displayName}</OrderTitle>\r\n                <Text>Подтвердите Ваш заказ</Text>\r\n                <Total>\r\n                    <span>Общая сумма:</span>\r\n                    <TotalPrice>{formatCurrency(total)}</TotalPrice>\r\n                </Total>\r\n                <ButtonCheckout onClick={() => {\r\n                        setOpenOrderConfirm(false);\r\n                        sendOrder(dataBase, orders, authentification, setOpenThanks);\r\n                        setOrders([]);\r\n\r\n                    }}>\r\n                    Подтвердить\r\n                </ButtonCheckout>\r\n            </ModalSmall>\r\n        </Overlay>\r\n    );\r\n}","import React, { useContext } from 'react';\r\nimport { Context } from '../Functions/context';\r\nimport styled from 'styled-components';\r\nimport { Overlay, ModalSmall, OrderTitle } from '../Styled/Components';\r\nimport { ButtonCheckout } from '../Styled/Buttons';\r\n\r\nconst ThanksModal = styled(ModalSmall)`\r\n    background-color: #002878;\r\n    color: #33d9de;\r\n`;\r\nconst ButtonThanks = styled(ButtonCheckout)`\r\n    box-shadow: 0 16px 32px 0 rgba(51, 217, 222, .35);\r\n`;\r\nexport const Thanks = () => {\r\n\r\n    const { auth: { authentification },\r\n            thanks: { setOpenThanks } } = useContext(Context);\r\n\r\n    const closeThanks = e => {\r\n        if(e.target.id === 'thanks-overlay') {\r\n            setOpenThanks(false);\r\n        }\r\n    }\r\n    return (\r\n        <Overlay id=\"thanks-overlay\" onClick={closeThanks}>\r\n            <ThanksModal>\r\n                <OrderTitle>Спасибо за Ваш заказ,</OrderTitle>\r\n                <OrderTitle>{authentification.displayName}</OrderTitle>\r\n                <ButtonThanks onClick={() => setOpenThanks(false)}>\r\n                    Закрыть\r\n                </ButtonThanks>\r\n            </ThanksModal>\r\n        </Overlay>\r\n    )\r\n}","import React from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport { GlobalStyle } from './Components/Styled/GlobalStyle';\nimport { NavBar } from './Components/NavBar/NavBar';\nimport { Menu } from './Components/Menu/Menu';\nimport { ModalItem } from './Components/Modal/ModalItem';\nimport { Order } from './Components/Order/Order';\nimport { OrderConfirm } from './Components/Order/OrderConfirm';\nimport { Thanks } from './Components/Order/Thanks';\nimport { useOpenItem } from './Components/Hooks/useOpenItem';\nimport { useOrders } from './Components/Hooks/useOrders';\nimport { useAuth } from './Components/Hooks/useAuth';\nimport { useTitle } from './Components/Hooks/useTitle';\nimport { useOrderConfirm } from './Components/Hooks/useOrderConfirm';\nimport { useThanks } from './Components/Hooks/useThanks';\nimport { Context } from './Components/Functions/context'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB01WzjQ2NOa3yW-6lofRB1xDcEu5-pQ-U\",\n  authDomain: \"mrmagamba.firebaseapp.com\",\n  databaseURL: \"https://mrmagamba-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"mrmagamba\",\n  storageBucket: \"mrmagamba.appspot.com\",\n  messagingSenderId: \"1069543412935\",\n  appId: \"1:1069543412935:web:2a8f5046979020db591ae2\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nfunction App() {\n  const auth = useAuth(firebase.auth);\n  const openItem = useOpenItem();\n  const orders = useOrders();\n  const orderConfirm = useOrderConfirm();\n  const thanks = useThanks();\n  useTitle(openItem.openItem);\n\n  return (\n    <Context.Provider value={{\n      auth,\n      openItem,\n      orders,\n      orderConfirm,\n      thanks,\n      firebaseDatabase: firebase.database,\n    }}>\n      <GlobalStyle/>\n      <NavBar/>\n      <Order/>\n      <Menu/> {/*верстка будет если условие перед &&*/}\n      {openItem.openItem && <ModalItem/>}\n      {orderConfirm.openOrderConfirm && <OrderConfirm/>}\n      {thanks.openThanks && <Thanks/>}\n    </Context.Provider>\n  );\n}\n\nexport default App;","import { useEffect, useState } from 'react';\r\n\r\nexport function useAuth(authFirebase) {\r\n    const [authentification, setAuthentification] = useState(null);\r\n\r\n    const auth = authFirebase();\r\n\r\n    const provider = new authFirebase.GoogleAuthProvider();\r\n\r\n    const logIn = () => auth.signInWithPopup(provider);\r\n\r\n    const logOut = () => auth.signOut() //возвращает promice\r\n        .catch(err => console.error())\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(user => {\r\n            user ? setAuthentification(user) : setAuthentification(null);\r\n        })\r\n    }, [auth, authentification]);\r\n\r\n    return { authentification, logIn, logOut };\r\n\r\n}","import { useState } from 'react';\r\n\r\nexport function useOpenItem() {\r\n    const [openItem, setOpenItem] = useState(null);\r\n    return {openItem, setOpenItem};\r\n}","import { useState } from 'react';\r\n\r\nexport function useOrders() {\r\n    const [orders, setOrders] = useState([]);\r\n    return {orders, setOrders};\r\n}","import { useState } from 'react';\r\n\r\nexport const useOrderConfirm = () => {\r\n    const [openOrderConfirm, setOpenOrderConfirm] = useState(false);\r\n    return { openOrderConfirm, setOpenOrderConfirm };\r\n};","import { useState } from 'react';\r\n\r\nexport const useThanks = () => {\r\n    const [openThanks, setOpenThanks] = useState(false);\r\n    return { openThanks, setOpenThanks };\r\n};","import { useEffect } from 'react';\r\n\r\nexport const useTitle = openItem => {\r\n  useEffect(() => {\r\n    // Обновляем заголовок документа с помощью API браузера\r\n    document.title = openItem ? openItem.name : 'MrMagamba';\r\n  }, [openItem]) //передали массив - ограничили перерендер при удалении\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}